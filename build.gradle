import java.util.concurrent.TimeUnit

buildscript {
    ext {
        kotlin_version = "1.2.61"
        spring_boot_version = "1.5.15.RELEASE"
        codemao_dependency_version = "1.1.6-RELEASE"
        project_version = "1.0.0"
    }

    repositories {
        mavenLocal()
        maven { url "https://nexus.codemao.cn/nexus/content/groups/public/" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "https://nexus.codemao.cn/nexus/content/repositories/releases/" }
        maven { url "https://nexus.codemao.cn/nexus/content/repositories/snapshots/" }
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}"
        classpath "gradle.plugin.io.github.http-builder-ng:http-plugin:0.1.1"
    }
}

def revision = System.getProperty("revision", "SNAPSHOT").toUpperCase()

allprojects {
    group "cn.codemao.research"
    version "${project_version}-${revision}"

    configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor(0, TimeUnit.SECONDS)
    }

    repositories {
        mavenLocal()
        maven { url "https://nexus.codemao.cn/nexus/content/groups/public/" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "https://nexus.codemao.cn/nexus/content/repositories/releases/" }
        maven { url "https://nexus.codemao.cn/nexus/content/repositories/snapshots/" }
        mavenCentral()
    }

    buildscript {
        repositories {
            mavenLocal()
            mavenCentral()
        }
    }

    apply plugin: "kotlin"
    apply plugin: "kotlin-spring"
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'maven-publish'
    apply plugin: "io.github.http-builder-ng.http-plugin"

    dependencyManagement {
        imports {
            mavenBom "cn.codemao.dependency:codemao-dependency:${codemao_dependency_version}"
        }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        compile "cn.codemao.starter:spring-cloud-starter-common"
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = ["-Xjsr305=strict"]
        }
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
}

configurations {
    ktlint
}

dependencies {
    ktlint "com.github.shyiko:ktlint:0.23.1"
}

task installGitHook(type: JavaExec, group: "ktlint") {
    description = "Install git hook to automatically check files for style violations on commit"
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "--install-git-pre-commit-hook"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "*/src/**/*.kt"
}

task formatAndKtlint(type: JavaExec, group: "ktlint") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "*/src/**/*.kt"

    doLast {
        println 'done for format, now start ktlint...'
        tasks.ktlint.execute()
    }
}

check.dependsOn ktlint
